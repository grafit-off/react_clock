{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["timeToString","date","toUTCString","slice","Clock","state","Date","intervalTimeId","this","window","setInterval","setState","console","info","clearInterval","name","props","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","intervalNameId","handleClick","e","preventDefault","handleContextMenu","document","addEventListener","_","prevState","debug","removeEventListener","React","ReactDOM","render","getElementById"],"mappings":"8MAEMA,EAAe,SAACC,GAAD,OAAwBA,EAAKC,cAAcC,OAAO,IAAK,IAU/DC,EAAb,4MACEC,MAA+B,CAC7BJ,KAAM,IAAIK,MAFd,EAKEC,eAAiB,EALnB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,eAAiBE,OAAOC,aAAY,WACvC,EAAKC,SAAS,CAAEV,KAAM,IAAIK,SACzB,OAVP,gCAaE,WAEEM,QAAQC,KAAKb,EAAaQ,KAAKH,MAAMJ,SAfzC,kCAkBE,WACEQ,OAAOK,cAAcN,KAAKD,kBAnB9B,oBAsBE,WACE,IAAQQ,EAASP,KAAKQ,MAAdD,KACAd,EAASO,KAAKH,MAAdJ,KAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGjB,EAAaC,YAnCxB,GAA2BiB,a,MCR3B,SAASC,IACP,IAAMC,EAAQd,KAAKe,MAAMC,WAAWnB,OAAO,GAE3C,MAAM,SAAN,OAAgBiB,GAQX,IAAMG,EAAb,4MACElB,MAA6B,CAC3BmB,UAAU,EACVC,UAAW,WAHf,EAMEC,eAAiB,EANnB,EA8BEC,YAAc,SAACC,GACbA,EAAEC,iBAEG,EAAKxB,MAAMmB,UACd,EAAKb,SAAS,CAAEa,UAAU,KAlChC,EAsCEM,kBAAoB,SAACF,GACnBA,EAAEC,iBAEE,EAAKxB,MAAMmB,UACb,EAAKb,SAAS,CAAEa,UAAU,KA1ChC,uDAQE,WAAqB,IAAD,OAClBO,SAASC,iBAAiB,QAASxB,KAAKmB,aACxCI,SAASC,iBAAiB,cAAexB,KAAKsB,mBAE9CtB,KAAKkB,eAAiBjB,OAAOC,aAAY,WACvC,EAAKC,SAAS,CAAEc,UAAWN,QAC1B,QAdP,gCAiBE,SAAmBc,EAAOC,GACnBA,EAAUT,YAAcjB,KAAKH,MAAMoB,WAAcjB,KAAKH,MAAMmB,UAE/DZ,QAAQuB,MAAR,uBAA8BD,EAAUT,UAAxC,eAAwDjB,KAAKH,MAAMoB,cApBzE,kCAwBE,WACEM,SAASK,oBAAoB,QAAS5B,KAAKmB,aAC3CI,SAASK,oBAAoB,cAAe5B,KAAKsB,mBACjDrB,OAAOK,cAAcN,KAAKkB,kBA3B9B,oBA8CE,WACE,MAGIlB,KAAKH,MAFPmB,EADF,EACEA,SACAC,EAFF,EAEEA,UAGF,OACE,sBAAKR,UAAU,MAAf,UACE,6CAICO,GACC,cAAC,EAAD,CAAOT,KAAMU,WA3DvB,GAAyBY,IAAMnB,WCZ/BoB,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.2329b66a.chunk.js","sourcesContent":["import { Component } from 'react';\n\nconst timeToString = (date: Date): string => date.toUTCString().slice(-12, -4);\n\ninterface IClockProps {\n  name: string;\n}\n\ninterface IClockState {\n  date: Date;\n}\n\nexport class Clock extends Component<IClockProps, IClockState> {\n  state: Readonly<IClockState> = {\n    date: new Date(),\n  };\n\n  intervalTimeId = 0;\n\n  componentDidMount() {\n    this.intervalTimeId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate() {\n    // eslint-disable-next-line no-console\n    console.info(timeToString(this.state.date));\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.intervalTimeId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {timeToString(date)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface IAppState {\n  hasClock: boolean;\n  clockName: string;\n}\n\nexport class App extends React.Component<{}, IAppState> {\n  state: Readonly<IAppState> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  intervalNameId = 0;\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleClick);\n    document.addEventListener('contextmenu', this.handleContextMenu);\n\n    this.intervalNameId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentDidUpdate(_: {}, prevState: Readonly<IAppState>) {\n    if ((prevState.clockName !== this.state.clockName) && this.state.hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClick);\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n    window.clearInterval(this.intervalNameId);\n  }\n\n  handleClick = (e: MouseEvent) => {\n    e.preventDefault();\n\n    if (!this.state.hasClock) {\n      this.setState({ hasClock: true });\n    }\n  };\n\n  handleContextMenu = (e: MouseEvent) => {\n    e.preventDefault();\n\n    if (this.state.hasClock) {\n      this.setState({ hasClock: false });\n    }\n  };\n\n  render() {\n    const {\n      hasClock,\n      clockName,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          React clock\n        </h1>\n\n        {hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}